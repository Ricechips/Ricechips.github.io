<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>重生之wp+阿里云服务器至hexo+github</title>
      <link href="/posts/blog/"/>
      <url>/posts/blog/</url>
      
        <content type="html"><![CDATA[<h1 id="个人博客重生记"><a href="#个人博客重生记" class="headerlink" title="个人博客重生记"></a>个人博客重生记</h1><h2 id="wordpress-阿里云服务器"><a href="#wordpress-阿里云服务器" class="headerlink" title="wordpress+阿里云服务器"></a>wordpress+阿里云服务器</h2><p>环境： <br><br>服务器:阿里云<br><br>域名:腾迅云<br><br>框架:wordpress<br><br>主题:Sakura<br><br>ssl证书:letsencrypt<br><br>已备案<br><br>上图<br><img src="https://cdn.jsdelivr.net/gh/Ricechips/image/image/20200821104457.png"><br><img src="https://cdn.jsdelivr.net/gh/Ricechips/image/image/20200821104525.png"><br><img src="https://cdn.jsdelivr.net/gh/Ricechips/image/image/20200821104625.png"><br><br><br>由于在2020.7失去大学生身份(毕业),放弃续费服务器,博客遂卒</p><h2 id="hexo-github"><a href="#hexo-github" class="headerlink" title="hexo+github"></a>hexo+github</h2><p>度过了一个半月没有博客的日子,感觉自己还是失去不了ta,便用另一种形式(免费)搭建博客.<br><br>环境: hexo+github+picgo+cdn.jsdelivr.net<br><br>因为太喜欢高清大图(二次元冲),但是由于图片加载导致网页卡顿,便做了图床的优化,由原先的2min出页面到现在秒出<br><img src="https://cdn.jsdelivr.net/gh/Ricechips/image/image/2d476598fae2be0d78d6d64e8eb536e.png"><br><img src="https://cdn.jsdelivr.net/gh/Ricechips/image/image/1597978670(1).png"> <br><br>希望自己能越来越好,越努力越幸运.</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>一次误删gnome心惊肉跳带着仟悔之心最终恢复了桌面环境的经历</title>
      <link href="/posts/undefined/"/>
      <url>/posts/undefined/</url>
      
        <content type="html"><![CDATA[<h1 id="2020-6-10"><a href="#2020-6-10" class="headerlink" title="2020.6.10"></a>2020.6.10</h1><h2 id="今天杭城的雨很大"><a href="#今天杭城的雨很大" class="headerlink" title="今天杭城的雨很大"></a>今天杭城的雨很大</h2><blockquote><p>配置samba ad时出现瓶颈，想删了软件包重新安装，不料用强制删除时桌面直接卡死（应该是什么依赖失去了），然后重启，怎么init 5 startx都救不回来，急阿！这个系统里还有辛苦搭建的cacti和zabbix呢，一定要恢复才行。<br><br>首先去百度搜“怎么恢复gnome桌面”全tm是无关紧要的教程，然后换成“怎么安装图形界面”，有办法了！首先要联网<br><br>/etc/sysconfig/network-scripts找到网卡并配置好了ip，还是没网???哦，原来是onboot没改成yes，service network restart成功联网<br><br>yum grouplist找到yum groupinstall “GNOME Desktop” “Graphical Administration Tools” 然后startx 好了</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>wsl2</title>
      <link href="/posts/wsl2/"/>
      <url>/posts/wsl2/</url>
      
        <content type="html"><![CDATA[<h1 id="wsl2"><a href="#wsl2" class="headerlink" title="wsl2"></a>wsl2</h1><p>windows terminal + wsl2 + kali + lolcat<br><img src="https://cdn.jsdelivr.net/gh/Ricechips/image/image/wsl2.png"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>python</title>
      <link href="/posts/python/"/>
      <url>/posts/python/</url>
      
        <content type="html"><![CDATA[<p>:hamburger:<br><a href="https://www.webfx.com/tools/emoji-cheat-sheet/">表情网址</a></p><h1 id="python3-8-pycharm2020-2-mysql8-0-21"><a href="#python3-8-pycharm2020-2-mysql8-0-21" class="headerlink" title="python3.8+pycharm2020.2+mysql8.0.21"></a>python3.8+pycharm2020.2+mysql8.0.21</h1><h2 id="python"><a href="#python" class="headerlink" title="python"></a>python</h2><p><a href="https://www.python.org/downloads/windows/">https://www.python.org/downloads/windows/</a></p><h2 id="pycharm"><a href="#pycharm" class="headerlink" title="pycharm"></a>pycharm</h2><p><a href="https://www.jetbrains.com/pycharm/download/#section=windows">https://www.jetbrains.com/pycharm/download/#section=windows</a> <br><br>Professional激活方法<br><br>Community版本没有内置database插件,并且最新版没有可用的插件</p><h2 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h2><p><a href="https://dev.mysql.com/downloads/">https://dev.mysql.com/downloads/</a> <br><br>创建my.ini配置文件</p><pre><code>[mysql]# 设置mysql客户端默认字符集default-character-set=utf8[mysqld]# 设置3306端口port = 3306# 设置mysql的安装目录basedir=C:\MySQL\mysql-8.0.15# 设置 mysql数据库的数据的存放目录，MySQL 8+ 不需要以下配置，系统自己生成即可，否则有可能报错# datadir=C:\\web\\sqldata# 允许最大连接数max_connections=20# 服务端使用的字符集默认为8比特编码的latin1字符集character-set-server=utf8# 创建新表时将使用的默认存储引擎default-storage-engine=INNODB</code></pre><p>C:\Windows\system32&gt;cd C:\mysql\mysql-8.0.21-winx64\bin<br><br>.\mysqld –initialize –console<br><br>.\mysqld install<br><br>net start mysql<br><br>C:\mysql\mysql-8.0.21-winx64\bin&gt;mysql -u root -p<br><br>alter user user() identified by ‘ricechips’;</p><h2 id="abab"><a href="#abab" class="headerlink" title="abab"></a>abab</h2><p><code>壁纸https://wallhaven.cc/</code> <br><br>报错解决<br><br>Q:由于找不到msvcp140.dll无法继续执行代码<br><br>A:下载<a href="https://www.microsoft.com/zh-cn/download/confirmation.aspx?id=48145">https://www.microsoft.com/zh-cn/download/confirmation.aspx?id=48145</a> <br><br><br>Q:服务没有响应控制功能<br><br>A:C:\mysql\mysql-8.0.21-winx64\bin&gt;mysqld –console<br><br><br>Q:装scrapy,Microsoft Visual C++ 14.0 is required.<br><br>A:<a href="https://visualstudio.microsoft.com/zh-hans/visual-cpp-build-tools/">https://visualstudio.microsoft.com/zh-hans/visual-cpp-build-tools/</a> <br><br><br>Q:Cannot open include file: ‘basetsd.h’: No such file or directory<br><br>A:<a href="https://developer.microsoft.com/en-us/windows/downloads/windows-10-sdk/">https://developer.microsoft.com/en-us/windows/downloads/windows-10-sdk/</a> <br><br><br>Q:fatal error LNK1158: cannot run ‘rc.exe’<br><br>A:在环境变量path中添加C:\Program Files (x86)\Windows Kits\10\bin\10.0.19041.0\x64<br><br>将rc.exe和rcdll.dll从C:\Program Files (x86)\Windows Kits\10\bin\10.0.19041.0\x64复制到C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\bin<br><br></p><h3 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h3><p>csdn-&gt;pdf<br><img src="https://cdn.jsdelivr.net/gh/Ricechips/image/image/20200821113608.png"></p><p>cosplay<br><img src="https://cdn.jsdelivr.net/gh/Ricechips/image/image/20200821113627.png"></p><p>弹幕词云<br><img src="https://cdn.jsdelivr.net/gh/Ricechips/image/image/20200821113647.png"></p><p>表情包<br><img src="https://cdn.jsdelivr.net/gh/Ricechips/image/image/20200821113701.png"></p><p>贴吧<br><img src="https://cdn.jsdelivr.net/gh/Ricechips/image/image/20200821113801.png"></p><p>小说<br><img src="https://cdn.jsdelivr.net/gh/Ricechips/image/image/20200821113749.png"></p><p>豆瓣<br><img src="https://cdn.jsdelivr.net/gh/Ricechips/image/image/20200821113736.png"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> scrapy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos7.7-minimal-kvm</title>
      <link href="/posts/centos7.7-minimal-kvm/"/>
      <url>/posts/centos7.7-minimal-kvm/</url>
      
        <content type="html"><![CDATA[<h1 id="Centos的图形化界面确实容易崩溃，操作一快就直接卡死，行吧，只能放弃平易近人的桌面，完全用黑乎乎的命令行操作了。"><a href="#Centos的图形化界面确实容易崩溃，操作一快就直接卡死，行吧，只能放弃平易近人的桌面，完全用黑乎乎的命令行操作了。" class="headerlink" title="Centos的图形化界面确实容易崩溃，操作一快就直接卡死，行吧，只能放弃平易近人的桌面，完全用黑乎乎的命令行操作了。"></a>Centos的图形化界面确实容易崩溃，操作一快就直接卡死，行吧，只能放弃平易近人的桌面，完全用黑乎乎的命令行操作了。</h1><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><blockquote><p><code>host机:centos7.7（minimal）</code> kvm虚拟化 <code>虚机：win7</code>  </p></blockquote><h2 id="u盘安装centos"><a href="#u盘安装centos" class="headerlink" title="u盘安装centos"></a>u盘安装centos</h2><blockquote><p>这一步跟我前一篇文章重复了，就不赘述了.  <a href="https://github.com/Ricechips/centos7-kvm-win10/blob/master/README.md">上一篇</a><br>给个镜像地址<a href="http://mirrors.aliyun.com/centos/7.7.1908/isos/x86_64/">http://mirrors.aliyun.com/centos/7.7.1908/isos/x86_64/</a></p></blockquote><h2 id="kvm安装"><a href="#kvm安装" class="headerlink" title="kvm安装"></a>kvm安装</h2><blockquote><p>这里多一步连接网络 <em>dhclient -v</em><br>其他步骤移步上一篇<br>ps:virt-manager可以不用装了，图形化管理的东西</p></blockquote><h2 id="显卡透传"><a href="#显卡透传" class="headerlink" title="显卡透传"></a>显卡透传</h2><blockquote><p>配置iommu<br>这一步要注意是否还有一个/boot/efi/EFI/centos/grub.cfg文件，若有，则在linuxefi  … quiet后面加上 intel_iommu=on，应该有2-3处，然后grub2-mkconfig更新并重启<br>找到显卡pci编号并与宿主机解绑打上vfio驱动<br>显卡的配置文件参数设置</p></blockquote><pre class=" language-c"><code class="language-c"><span class="token operator">&lt;</span><span class="token operator">/</span>video<span class="token operator">></span>#pci显卡设备在video配置下面<span class="token operator">&lt;</span>hostdev mode<span class="token operator">=</span><span class="token string">'subsystem'</span> type<span class="token operator">=</span><span class="token string">'pci'</span> managed<span class="token operator">=</span><span class="token string">'yes'</span><span class="token operator">></span>  <span class="token operator">&lt;</span>source<span class="token operator">></span>    <span class="token operator">&lt;</span>address domain<span class="token operator">=</span><span class="token string">'0x0000'</span> bus<span class="token operator">=</span><span class="token string">'0x0a'</span> slot<span class="token operator">=</span><span class="token string">'0x00'</span> function<span class="token operator">=</span><span class="token string">'0x0'</span><span class="token operator">/</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>source<span class="token operator">></span>  <span class="token operator">&lt;</span>address type<span class="token operator">=</span><span class="token string">'pci'</span> domain<span class="token operator">=</span><span class="token string">'0x0000'</span> bus<span class="token operator">=</span><span class="token string">'0x00'</span> slot<span class="token operator">=</span><span class="token string">' '</span> function<span class="token operator">=</span><span class="token string">' '</span><span class="token operator">/</span><span class="token operator">></span> #这一行可以直接dd<span class="token operator">&lt;</span><span class="token operator">/</span>hostdev<span class="token operator">></span><span class="token operator">&lt;</span>hostdev mode<span class="token operator">=</span><span class="token string">'subsystem'</span> type<span class="token operator">=</span><span class="token string">'pci'</span> managed<span class="token operator">=</span><span class="token string">'yes'</span><span class="token operator">></span>  <span class="token operator">&lt;</span>source<span class="token operator">></span>    <span class="token operator">&lt;</span>address domain<span class="token operator">=</span><span class="token string">'0x0000'</span> bus<span class="token operator">=</span><span class="token string">'0x0a'</span> slot<span class="token operator">=</span><span class="token string">'0x00'</span> function<span class="token operator">=</span><span class="token string">'0x1'</span><span class="token operator">/</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>source<span class="token operator">></span>  <span class="token operator">&lt;</span>address type<span class="token operator">=</span><span class="token string">'pci'</span> domain<span class="token operator">=</span><span class="token string">'0x0000'</span> bus<span class="token operator">=</span><span class="token string">'0x00'</span> slot<span class="token operator">=</span><span class="token string">' '</span> function<span class="token operator">=</span><span class="token string">' '</span><span class="token operator">/</span><span class="token operator">></span> #这一行可以直接dd<span class="token operator">&lt;</span><span class="token operator">/</span>hostdev<span class="token operator">></span></code></pre><h2 id="安装OVMF"><a href="#安装OVMF" class="headerlink" title="安装OVMF"></a>安装OVMF</h2><blockquote><p>安装wget: <em>curl -o /etc/yum.repos.d/CentOS-Base.repo <a href="http://mirrors.aliyun.com/repo/Centos-7.repo">http://mirrors.aliyun.com/repo/Centos-7.repo</a></em><br>linux couldnt resolve host mirrors.aliyun.com解决方法</p></blockquote><pre class=" language-c"><code class="language-c">vi <span class="token operator">/</span>etc<span class="token operator">/</span>resolv<span class="token punctuation">.</span>conf nameserver <span class="token number">8.8</span><span class="token punctuation">.</span><span class="token number">8.8</span> nameserver <span class="token number">8.8</span><span class="token punctuation">.</span><span class="token number">4.4</span> search localdomain service network restart</code></pre><blockquote><p><em>yum install wget</em><br>如果想看ifconfig: <em>yum install net-tools</em> </p></blockquote><h2 id="安装win7"><a href="#安装win7" class="headerlink" title="安装win7"></a>安装win7</h2><blockquote><p>我是直接将打好驱动的win7镜像直接用移动硬盘拷贝到这个命令行界面，当然，配置文件xml也捎上了。<br>centos挂载移动硬盘：</p></blockquote><pre class=" language-c"><code class="language-c">   wget <span class="token operator">-</span>O <span class="token operator">/</span>etc<span class="token operator">/</span>yum<span class="token punctuation">.</span>repos<span class="token punctuation">.</span>d<span class="token operator">/</span>epel<span class="token punctuation">.</span>repo http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>mirrors<span class="token punctuation">.</span>aliyun<span class="token punctuation">.</span>com<span class="token operator">/</span>repo<span class="token operator">/</span>epel<span class="token number">-7</span><span class="token punctuation">.</span>repo   yum install ntfs<span class="token operator">-</span>3g   fdisk <span class="token operator">-</span>l #查看移动硬盘编号   parted <span class="token operator">/</span>dev<span class="token operator">/</span>sdb print   mount <span class="token operator">-</span>t ntfs <span class="token operator">/</span>dev<span class="token operator">/</span>sdb3 <span class="token operator">/</span>home<span class="token operator">/</span>kvm 挂载硬盘到kvm目录下   cp 复制qcow2和xml</code></pre><h2 id="usb透传"><a href="#usb透传" class="headerlink" title="usb透传"></a>usb透传</h2><blockquote><p>lsusb命令安装：<em>yum -y install usbutils</em><br>lsusb查询要透传的usb设备得到id号<br>在配置文件中安装，具体位置：</p></blockquote><pre class=" language-c"><code class="language-c"><span class="token operator">&lt;</span>hostdev mode<span class="token operator">=</span><span class="token string">'subsystem'</span> type<span class="token operator">=</span><span class="token string">'usb'</span> managed<span class="token operator">=</span><span class="token string">'yes'</span><span class="token operator">></span>  <span class="token operator">&lt;</span>source<span class="token operator">></span>    <span class="token operator">&lt;</span>vendor id<span class="token operator">=</span><span class="token string">' '</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>product id<span class="token operator">=</span><span class="token string">' '</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>address bus<span class="token operator">=</span><span class="token string">' '</span> device<span class="token operator">=</span><span class="token string">' '</span><span class="token operator">/</span><span class="token operator">></span> #这一行若是同一牌子的键鼠就要添加  <span class="token operator">&lt;</span><span class="token operator">/</span>source<span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">/</span>hostdev<span class="token operator">></span></code></pre><h3 id="一些tips"><a href="#一些tips" class="headerlink" title="一些tips"></a>一些tips</h3><p>把封装好驱动的win7.qcow2和win7.xml拷好后，改一下xml的uuid和mac（直接整行删除，因为会自动生成）,然后把qcow2的路径改改，pci显卡的编号改改，usb的id改改，ok之后就<em>virsh define win7.xml</em>生成虚机 <em>virsh start win7</em> 完事。若想删除虚拟机<em>virsh undefine win7</em>,需先删除/var/lib/libvirt/qemu/nvram下的fd文件。<br><a href="https://wiki.archlinux.org/index.php/PCI_passthrough_via_OVMF_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">https://wiki.archlinux.org/index.php/PCI_passthrough_via_OVMF_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> kvm </tag>
            
            <tag> 虚拟化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Zabbix</title>
      <link href="/posts/zabbix/"/>
      <url>/posts/zabbix/</url>
      
        <content type="html"><![CDATA[<h1 id="Zabbix"><a href="#Zabbix" class="headerlink" title="Zabbix"></a>Zabbix</h1><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><blockquote><p>Zabbix server: <code>Centos7 192.168.106.201</code><br><br>被监控端:<code>Win7 192.168.106.3</code>    <code>Centos 192.168.106.2</code></p></blockquote><h2 id="监控服务端"><a href="#监控服务端" class="headerlink" title="监控服务端"></a>监控服务端</h2><blockquote><p>脚本</p></blockquote><pre class=" language-c"><code class="language-c">#<span class="token operator">!</span><span class="token operator">/</span>bin<span class="token operator">/</span>bash#安装zabbix源、aliyun YUM源curl <span class="token operator">-</span>o <span class="token operator">/</span>etc<span class="token operator">/</span>yum<span class="token punctuation">.</span>repos<span class="token punctuation">.</span>d<span class="token operator">/</span>CentOS<span class="token operator">-</span>Base<span class="token punctuation">.</span>repo http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>mirrors<span class="token punctuation">.</span>aliyun<span class="token punctuation">.</span>com<span class="token operator">/</span>repo<span class="token operator">/</span>Centos<span class="token number">-7</span><span class="token punctuation">.</span>repocurl <span class="token operator">-</span>o <span class="token operator">/</span>etc<span class="token operator">/</span>yum<span class="token punctuation">.</span>repos<span class="token punctuation">.</span>d<span class="token operator">/</span>epel<span class="token punctuation">.</span>repo http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>mirrors<span class="token punctuation">.</span>aliyun<span class="token punctuation">.</span>com<span class="token operator">/</span>repo<span class="token operator">/</span>epel<span class="token number">-7</span><span class="token punctuation">.</span>reporpm <span class="token operator">-</span>ivh http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>repo<span class="token punctuation">.</span>zabbix<span class="token punctuation">.</span>com<span class="token operator">/</span>zabbix<span class="token operator">/</span><span class="token number">3.0</span><span class="token operator">/</span>rhel<span class="token operator">/</span><span class="token number">7</span><span class="token operator">/</span>x86_64<span class="token operator">/</span>zabbix<span class="token operator">-</span>release<span class="token number">-3.0</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">.</span>el7<span class="token punctuation">.</span>noarch<span class="token punctuation">.</span>rpm#安装zabbix yum install <span class="token operator">-</span>y zabbix<span class="token operator">-</span>server<span class="token operator">-</span>mysql zabbix<span class="token operator">-</span>web<span class="token operator">-</span>mysql#安装启动 mariadb数据库yum install <span class="token operator">-</span>y  mariadb<span class="token operator">-</span>serversystemctl start mariadb<span class="token punctuation">.</span>service#创建数据库mysql <span class="token operator">-</span>e <span class="token string">'create database zabbix character set utf8 collate utf8_bin;'</span>mysql <span class="token operator">-</span>e <span class="token string">'grant all privileges on zabbix.* to zabbix@localhost identified by "zabbix";'</span>#导入数据zcat <span class="token operator">/</span>usr<span class="token operator">/</span>share<span class="token operator">/</span>doc<span class="token operator">/</span>zabbix<span class="token operator">-</span>server<span class="token operator">-</span>mysql<span class="token number">-3.0</span><span class="token punctuation">.</span><span class="token number">13</span><span class="token operator">/</span>create<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>gz<span class="token operator">|</span>mysql <span class="token operator">-</span>uzabbix <span class="token operator">-</span>pzabbix zabbix#配置zabbixserver连接mysqlsed <span class="token operator">-</span>i<span class="token punctuation">.</span>ori <span class="token string">'115a DBPassword=zabbix'</span> <span class="token operator">/</span>etc<span class="token operator">/</span>zabbix<span class="token operator">/</span>zabbix_server<span class="token punctuation">.</span>conf#添加时区sed <span class="token operator">-</span>i<span class="token punctuation">.</span>ori <span class="token string">'18a php_value date.timezone  Asia/Shanghai'</span> <span class="token operator">/</span>etc<span class="token operator">/</span>httpd<span class="token operator">/</span>conf<span class="token punctuation">.</span>d<span class="token operator">/</span>zabbix<span class="token punctuation">.</span>conf#解决中文乱码yum <span class="token operator">-</span>y install wqy<span class="token operator">-</span>microhei<span class="token operator">-</span>fonts\cp <span class="token operator">/</span>usr<span class="token operator">/</span>share<span class="token operator">/</span>fonts<span class="token operator">/</span>wqy<span class="token operator">-</span>microhei<span class="token operator">/</span>wqy<span class="token operator">-</span>microhei<span class="token punctuation">.</span>ttc <span class="token operator">/</span>usr<span class="token operator">/</span>share<span class="token operator">/</span>fonts<span class="token operator">/</span>dejavu<span class="token operator">/</span>DejaVuSans<span class="token punctuation">.</span>ttf#启动服务systemctl start zabbix<span class="token operator">-</span>serversystemctl start httpd#写入开机自启动chmod <span class="token operator">+</span>x <span class="token operator">/</span>etc<span class="token operator">/</span>rc<span class="token punctuation">.</span>d<span class="token operator">/</span>rc<span class="token punctuation">.</span>localcat <span class="token operator">>></span><span class="token operator">/</span>etc<span class="token operator">/</span>rc<span class="token punctuation">.</span>d<span class="token operator">/</span>rc<span class="token punctuation">.</span>local<span class="token operator">&lt;&lt;</span><span class="token constant">EOF</span>systemctl start mariadb<span class="token punctuation">.</span>servicesystemctl start httpdsystemctl start zabbix<span class="token operator">-</span>server<span class="token constant">EOF</span>#输出信息echo <span class="token string">"浏览器访问 http://`hostname -I|awk '&amp;#123;print $1&amp;#125;'`/zabbix"</span></code></pre><blockquote><p>若80端口被占用 修改/etc/httpd/conf/httpd.conf<br><br>注意SElinux和firewalld关闭状态<br><br><em>yum install zabbix-agent -y</em><br><br><em>systemctl start zabbix-agent</em>监控服务端<br><img src="https://cdn.jsdelivr.net/gh/Ricechips/image/image/zabbix.png"><br>zabbix is not running报错是因为selinux没关闭<br><br>setenforce 0或/etc/selinux/config修改SELINUX=”disabled”</p></blockquote><h2 id="被监控端Win17"><a href="#被监控端Win17" class="headerlink" title="被监控端Win17"></a>被监控端Win17</h2><blockquote><p>打通虚拟机和主机的网络:route add 192.168.106.0 mask 255.255.255.0 192.168.106.1<br><br>官网<a href="https://www.zabbix.com/cn/download_agents">跳转</a> 下载相应版本Zip <br><br>修改conf文本</p></blockquote><pre class=" language-c"><code class="language-c">LogFile<span class="token operator">=</span>D<span class="token punctuation">:</span>\zabbix_agentd<span class="token punctuation">.</span>logServer<span class="token operator">=</span><span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">106.201</span>                                            <span class="token comment" spellcheck="true">//zabbix服务端的ip地址</span>ServerActive<span class="token operator">=</span><span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">106.201</span>Hostname<span class="token operator">=</span><span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">106.3</span>                                           <span class="token comment" spellcheck="true">//windows客户机的ip地址</span></code></pre><pre class=" language-c"><code class="language-c">D<span class="token punctuation">:</span>\zabbix\bin\zabbix_agentd<span class="token punctuation">.</span>exe <span class="token operator">-</span>c D<span class="token punctuation">:</span>\zabbix\conf\zabbix_agentd<span class="token punctuation">.</span>conf <span class="token operator">-</span>i  <span class="token comment" spellcheck="true">//安装</span>D<span class="token punctuation">:</span>\zabbix\bin\zabbix_agentd<span class="token punctuation">.</span>exe <span class="token operator">-</span>c D<span class="token punctuation">:</span>\zabbix\conf\zabbix_agentd<span class="token punctuation">.</span>conf <span class="token operator">-</span>s  <span class="token comment" spellcheck="true">//启动,-d是卸载</span></code></pre><blockquote><p>关闭防火墙<br><br>在服务端测试连通性<em>zabbix_get -s 192.168.106.3 -p 10050 -k “system.cpu.load[all,avg1]</em><br><img src="https://cdn.jsdelivr.net/gh/Ricechips/image/image/zabbix1.png"></p></blockquote><h2 id="被监控端Centos"><a href="#被监控端Centos" class="headerlink" title="被监控端Centos"></a>被监控端Centos</h2><blockquote><p><em>rpm -ivh <a href="http://repo.zabbix.com/zabbix/3.0/rhel/7/x86_64/zabbix-release-3.0-1.el7.noarch.rpm">http://repo.zabbix.com/zabbix/3.0/rhel/7/x86_64/zabbix-release-3.0-1.el7.noarch.rpm</a></em> <br><br><em>yum install zabbix-agent</em><br><br><em>vi /etc/zabbix/zabbix_agentd.conf</em>修改<br></p></blockquote><pre class=" language-c"><code class="language-c">Server<span class="token operator">=</span><span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">106.201</span>     <span class="token comment" spellcheck="true">//安装zabbix服务端的机器的IP</span>ServerActive<span class="token operator">=</span><span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">106.201</span> <span class="token comment" spellcheck="true">//安装zabbix服务端的机器的IP</span>Hostname<span class="token operator">=</span>Centos          <span class="token comment" spellcheck="true">//主机名</span></code></pre><blockquote><p> 开启服务<em>systemctl start zabbix-agent</em><br><img src="https://cdn.jsdelivr.net/gh/Ricechips/image/image/zabbix2.png"></p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> zabbix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux</title>
      <link href="/posts/undefined/"/>
      <url>/posts/undefined/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1><h2 id="查找vi内固定行"><a href="#查找vi内固定行" class="headerlink" title="查找vi内固定行"></a>查找vi内固定行</h2><p>ctrl + g 显示行数 <br><br>命令模式   :n   (n)为想要跳转的行数 <br><br><a href="https://www.cnblogs.com/silly-bird/p/10648169.html">系统加载进度条消失之术</a></p><h2 id="静态ip网络配置"><a href="#静态ip网络配置" class="headerlink" title="静态ip网络配置"></a>静态ip网络配置</h2><p>/etc/sysconfig/network-scripts/ 找到网卡</p><pre class=" language-c"><code class="language-c">编辑  dhcp<span class="token operator">-></span><span class="token keyword">static</span> onboot<span class="token operator">=</span>yesIPADDR<span class="token operator">=</span>GATEWAY<span class="token operator">=</span>NETMASK<span class="token operator">=</span>DNS1<span class="token operator">=</span>service network restart</code></pre><h2 id="qcow2硬盘扩容"><a href="#qcow2硬盘扩容" class="headerlink" title="qcow2硬盘扩容"></a>qcow2硬盘扩容</h2><p>qemu-img info xx.qcow2 <br><br>qemu-img resize xx.qcow2 +3G </p><h2 id="SCP上传文件到服务器"><a href="#SCP上传文件到服务器" class="headerlink" title="SCP上传文件到服务器"></a>SCP上传文件到服务器</h2><p>scp -r /home/ <a href="mailto:root@192.168.xx.xx">root@192.168.xx.xx</a>:/</p><h2 id="查找文件"><a href="#查找文件" class="headerlink" title="查找文件"></a>查找文件</h2><p>find / -name php.ini</p><h2 id="大小写问题"><a href="#大小写问题" class="headerlink" title="大小写问题"></a>大小写问题</h2><p>setleds +caps</p><h2 id="时间同步"><a href="#时间同步" class="headerlink" title="时间同步"></a>时间同步</h2><pre class=" language-c"><code class="language-c">rpm <span class="token operator">-</span>ivh http<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>mirrors<span class="token punctuation">.</span>wlnmp<span class="token punctuation">.</span>com<span class="token operator">/</span>centos<span class="token operator">/</span>wlnmp<span class="token operator">-</span>release<span class="token operator">-</span>centos<span class="token punctuation">.</span>noarch<span class="token punctuation">.</span>rpmntpdate ntp1<span class="token punctuation">.</span>aliyun<span class="token punctuation">.</span>comln <span class="token operator">-</span>sf <span class="token operator">/</span>usr<span class="token operator">/</span>share<span class="token operator">/</span>zoneinfo<span class="token operator">/</span>Asia<span class="token operator">/</span>Shanghai <span class="token operator">/</span>etc<span class="token operator">/</span>localtime</code></pre><h2 id="文件权限-大小-所有者-组"><a href="#文件权限-大小-所有者-组" class="headerlink" title="文件权限 大小 所有者 组"></a>文件权限 大小 所有者 组</h2><p>r:4 w:2 x:1 <br><br>chown 3000000:users /home</p><h2 id="磁盘扩容-不是扩-根目录-扩根的教程太多了"><a href="#磁盘扩容-不是扩-根目录-扩根的教程太多了" class="headerlink" title="磁盘扩容(不是扩/根目录,扩根的教程太多了)"></a>磁盘扩容(不是扩/根目录,扩根的教程太多了)</h2><p>在原有的一个数据盘上进行扩容并保证数据不丢失<br><br>不用pv,vg云云<br></p><pre class=" language-c"><code class="language-c">umount <span class="token operator">/</span>dev<span class="token operator">/</span>sdb1partedpunit sprm <span class="token number">1</span>mkpart primary ext4 <span class="token number">2048</span> x<span class="token punctuation">.</span>xGe2fsck <span class="token operator">-</span>f <span class="token operator">/</span>dev<span class="token operator">/</span>sdb1resize2fs <span class="token operator">/</span>dev<span class="token operator">/</span>sdb1重新Mount</code></pre><h2 id="Spice"><a href="#Spice" class="headerlink" title="Spice"></a>Spice</h2><p>spice-gtk-tools软件包<br><br>spicy -h 127.0.0.1 -p 5900</p><h2 id="透传USB"><a href="#透传USB" class="headerlink" title="透传USB"></a>透传USB</h2><p>virsh attach-device $domain_name usb.xml</p><pre class=" language-c"><code class="language-c">脚本#<span class="token operator">!</span>bin<span class="token operator">/</span>shlsusb <span class="token operator">></span> junk2<span class="token punctuation">.</span>txtdiff junk<span class="token punctuation">.</span>txt junk2<span class="token punctuation">.</span>txt <span class="token operator">></span> junk3<span class="token punctuation">.</span>txtsed <span class="token operator">-</span>n <span class="token string">'4p'</span> junk3<span class="token punctuation">.</span>txt <span class="token operator">|</span> awk <span class="token string">'&amp;#123;print $5&amp;#125;'</span> <span class="token operator">></span> junk4<span class="token punctuation">.</span>txtI <span class="token operator">=</span> $<span class="token punctuation">(</span>cat junk4<span class="token punctuation">.</span>txt<span class="token punctuation">)</span> expr substr <span class="token string">"$I"</span> <span class="token number">2</span> <span class="token number">2</span> <span class="token operator">></span> junk5<span class="token punctuation">.</span>txtI1 <span class="token operator">=</span> $<span class="token punctuation">(</span>cat junk5<span class="token punctuation">.</span>txt<span class="token punctuation">)</span>echo "<span class="token operator">&lt;</span>hostdev mode<span class="token operator">=</span><span class="token string">'subsystem'</span> type<span class="token operator">=</span><span class="token string">'usb'</span> managed<span class="token operator">=</span><span class="token string">'yes'</span><span class="token operator">></span>      <span class="token operator">&lt;</span>source<span class="token operator">></span>        <span class="token operator">&lt;</span>vendor id<span class="token operator">=</span><span class="token string">'0x15d9'</span><span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span>product id<span class="token operator">=</span><span class="token string">'0x0a4e'</span><span class="token operator">/</span><span class="token operator">></span>        <span class="token operator">&lt;</span>address bus<span class="token operator">=</span><span class="token string">'2'</span> device<span class="token operator">=</span><span class="token string">'$I1'</span><span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>source<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>hostdev<span class="token operator">></span>"<span class="token operator">></span> device<span class="token punctuation">.</span>xmlvirsh attach<span class="token operator">-</span>device win10<span class="token number">-2</span> device<span class="token punctuation">.</span>xml    </code></pre><p>##<br>/usr 全名為 unix software resource 縮寫，放置系統相關軟體、服務（注意不是 user 的縮寫喔！)<br><br>{n}dd {n}：刪除游標所在的那一行往下數 {n} 行<br><br>watch -n 1 pkill -USR1 -x dd 拷贝u盘进度条<br><br>su (switch user)<br><br>grep -i xhci /boot/config-$(uname -r)<br><br><a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_and_managing_virtualization/index">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_and_managing_virtualization/index</a> <br><br><a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/virtualization_deployment_and_administration_guide/index">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/virtualization_deployment_and_administration_guide/index</a> <br><br><a href="https://lwn.net/Articles/705160/">https://lwn.net/Articles/705160/</a></p><h2 id="win10改时间显示–某些设置隐藏"><a href="#win10改时间显示–某些设置隐藏" class="headerlink" title="win10改时间显示–某些设置隐藏"></a>win10改时间显示–某些设置隐藏</h2><p>去control panel改</p><h2 id="github"><a href="#github" class="headerlink" title="github"></a>github</h2><pre class=" language-c"><code class="language-c"><span class="token macro property">#github</span><span class="token number">192.30</span><span class="token punctuation">.</span><span class="token number">253.113</span> github<span class="token punctuation">.</span>com<span class="token number">151.101</span><span class="token punctuation">.</span><span class="token number">185.194</span> github<span class="token punctuation">.</span>global<span class="token punctuation">.</span>ssl<span class="token punctuation">.</span>fastly<span class="token punctuation">.</span>nethttps<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>ipaddress<span class="token punctuation">.</span>com<span class="token operator">/</span>ip<span class="token operator">-</span>lookupC<span class="token punctuation">:</span>\Windows\System32\drivers\etc\hosts<span class="token operator">/</span>etc<span class="token operator">/</span>hosts</code></pre><h2 id="练练手-sh"><a href="#练练手-sh" class="headerlink" title="练练手.sh"></a>练练手.sh</h2><pre class=" language-c"><code class="language-c">#<span class="token operator">!</span><span class="token operator">/</span>bin<span class="token operator">/</span>bash<span class="token keyword">if</span> <span class="token punctuation">[</span> $# <span class="token operator">-</span>ge <span class="token number">1</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>then <span class="token comment" spellcheck="true">//如果传递的参数数量大于或等于1</span>        systemctl status $<span class="token number">1</span> <span class="token operator">></span> <span class="token operator">/</span>dev<span class="token operator">/</span>null        <span class="token keyword">if</span> <span class="token punctuation">[</span> $<span class="token operator">?</span> <span class="token operator">-</span>eq <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>then <span class="token comment" spellcheck="true">//$?是指上一次命令执行的成功或者失败的状态</span>                echo <span class="token string">"service is running"</span>        <span class="token keyword">else</span>                systemctl start $<span class="token number">1</span>        fi<span class="token keyword">else</span>        echo <span class="token string">"执行脚本的格式"</span>        echo <span class="token string">"sh $0 服务名"</span>fi#<span class="token punctuation">.</span><span class="token operator">/</span>status<span class="token punctuation">.</span>sh httpd</code></pre><pre class=" language-c"><code class="language-c">sh <span class="token operator">-</span>xv xxx<span class="token punctuation">.</span>sh <span class="token comment" spellcheck="true">//调试脚本</span>#<span class="token operator">!</span><span class="token operator">/</span>bin<span class="token operator">/</span>bashi<span class="token operator">=</span><span class="token number">0</span>            num2<span class="token operator">=</span>`echo $RANDOM <span class="token operator">|</span> cut <span class="token operator">-</span>c <span class="token number">1</span><span class="token operator">-</span><span class="token number">2</span>`        <span class="token keyword">while</span> true     <span class="token keyword">do</span>    read <span class="token operator">-</span>p <span class="token string">"num:"</span> num1       <span class="token keyword">if</span> <span class="token punctuation">[</span> $<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>num1<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">-</span>gt $<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>num2<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>then             echo <span class="token string">"da"</span>           let i<span class="token operator">++</span>                     elif <span class="token punctuation">[</span> $<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>num1<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token operator">-</span>lt $<span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>num2<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>then          echo <span class="token string">"xiao"</span>            let i<span class="token operator">++</span>                    <span class="token keyword">else</span>        echo <span class="token string">"bingo"</span>           echo <span class="token string">"wrong times:$i"</span>             <span class="token keyword">break</span>                      fidone</code></pre><pre class=" language-shell"><code class="language-shell">#!/bin/bashecho "The Host Name is:"`hostname`echo "The IP ADDR is:"`ifconfig | head -2 | tail -1 | awk '&#123;print $2&#125;'`echo "The OS Version is:"`cat /etc/redhat-release`echo "The Kernel Version is:"`cat /proc/version | cut -d"(" -f1`echo "The CPU Model is:"`lscpu | grep "Model name" | cut -d ":" -f2 | tr -s " "` //以:为分割符号，第二个field; -s 删除所有重复出现字符序列，只保留第一个；即将重复出现字符串压缩为一个字符串echo "The Memory Size is:"`free -h | tail -1 | awk '&#123;print $1,$2&#125;'`echo "The HD Size is:"`lsblk | grep "disk" | awk '&#123;print $NF,$4&#125;'` //$NF代表 ：最后一个Field(列)</code></pre><h2 id="时间date"><a href="#时间date" class="headerlink" title="时间date"></a>时间date</h2><p>date +”%F %T”<br><br>%F  full date; same as %Y-%m-%d<br><br>%T  time; same as %H:%M:%S<br></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Opennebula</title>
      <link href="/posts/opennebula/"/>
      <url>/posts/opennebula/</url>
      
        <content type="html"><![CDATA[<h1 id="Opennebula"><a href="#Opennebula" class="headerlink" title="Opennebula"></a>Opennebula</h1><p>网上的资料也太少了吧！</p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><blockquote><p>主控端服务器：Centos7  192.168.106.201 <br><br>节点服务器（虚拟机）：Centos7  192.168.106.2 <br><br>虚拟机里面的虚拟机：ttylinux (chop wood,carry water)</p></blockquote><h2 id="主控端配置"><a href="#主控端配置" class="headerlink" title="主控端配置"></a>主控端配置</h2><blockquote><p>第一种方法：脚本安装 <br><br><em>wget ‘<a href="https://github.com/OpenNebula/minione/releases/latest/download/minione'">https://github.com/OpenNebula/minione/releases/latest/download/minione'</a></em> <br><br><em>bash minione</em><br><br>官方给出的一键安装脚本，因为服务器原因，速度慢</p></blockquote><blockquote><p>第二种方法：正常流程安装<br><br><em>vim /etc/selinux/config</em>将<em>SELINUX=disabled</em>，reboot<br><br>加源<br><br>cat &lt;&lt; “EOT” &gt; /etc/yum.repos.d/opennebula.repo<br><br> [opennebula]<br><br> name=opennebula<br><br> baseurl=<a href="https://downloads.opennebula.org/repo/5.10/CentOS/7/$basearch">https://downloads.opennebula.org/repo/5.10/CentOS/7/$basearch</a><br><br> enabled=1<br><br> gpgkey=<a href="https://downloads.opennebula.org/repo/repo.key">https://downloads.opennebula.org/repo/repo.key</a><br><br> gpgcheck=1<br><br> repo_gpgcheck=1<br><br> EOT<br><br><br><em>yum install epel-release</em><br><br><em>yum install opennebula-server opennebula-sunstone opennebula-ruby opennebula-gate opennebula-flow</em>安装依赖<br><br><em>echo “oneadmin:mypassword” &gt; ~/.one/one_auth</em>设置管理平台帐号密码<br><br><em>systemctl start opennebula</em> <em>systemctl start opennebula-sunstone</em>开启服务<br><br><em>oneuser show</em>验证是否正常安装<br><br><em><a href="http://ip:9869/">http://ip:9869</a></em>浏览器访问控制面板<br><br><img src="https://cdn.jsdelivr.net/gh/Ricechips/image/image/20200821102640.png"></p></blockquote><h2 id="节点服务器配置"><a href="#节点服务器配置" class="headerlink" title="节点服务器配置"></a>节点服务器配置</h2><blockquote><p>创建虚拟机并配置网络<br><br>打通主控和节点服务器网络，例：<em>ip route add 192.168.106.0/24 via 192.168.106.1 dev ens3</em><br><br>加源并安装依赖<em>yum install opennebula-node-kvm</em> 重启服务<em>systemctl restart libvirtd</em><br><br>禁用SElinux<br><br>配置ssh无密码连接 <em>vim /etc/hosts</em>修改主机名如：<br>192.168.106.201 host <br> 192.168.106.2 node<br><br><br> <em>ssh-keyscan host node  &gt;&gt; /var/lib/one/.ssh/known_hosts</em> <br> * scp /var/lib/one/.ssh/*  root@node:/var/lib/one/.ssh/* <br> 此时主控端ssh node可直接登陆节点</p></blockquote><h2 id="sunstone面板"><a href="#sunstone面板" class="headerlink" title="sunstone面板"></a>sunstone面板</h2><blockquote><p>设置可以切换中文<br><br>基础设施-&gt;主机 添加node节点(kvm类型)<br><br>从opennebula public下载镜像创建虚机进行管理<br><br><img src="https://cdn.jsdelivr.net/gh/Ricechips/image/image/20200821102707.png"></p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Cacti</title>
      <link href="/posts/cacti/"/>
      <url>/posts/cacti/</url>
      
        <content type="html"><![CDATA[<h1 id="Cacti"><a href="#Cacti" class="headerlink" title="Cacti"></a>Cacti</h1><blockquote><p>蛮麻烦的</p></blockquote><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><blockquote><p><code>服务端:Centos7</code>  <code>被监控端:win7</code></p></blockquote><h2 id="Cacti服务端搭建"><a href="#Cacti服务端搭建" class="headerlink" title="Cacti服务端搭建"></a>Cacti服务端搭建</h2><blockquote><p>安装Mysql<br><br><em>rpm -Uvh <a href="http://repo.mysql.com/mysql57-community-release-el7.rpm">http://repo.mysql.com/mysql57-community-release-el7.rpm</a></em> <br><br><em>yum clean all &amp;&amp; yum makecache</em><br><br>安装LAMP<br><br><em>yum install httpd mysql-server php php-gd php-mysql -y</em><br><br>安装RRDtool<br><br><em>yum install rrdtool rrdtool-devel.x86_64 rrdtool-perl.x86_64 -y</em><br><br>安装SNMP<br><br><em>yum install net-snmp-utils -y</em><br><br>部署LAMP<br></p></blockquote><pre class=" language-c"><code class="language-c"><span class="token operator">*</span><span class="token operator">/</span>usr<span class="token operator">/</span>bin<span class="token operator">/</span>mysql –initialize –basedir<span class="token operator">=</span><span class="token operator">/</span>usr<span class="token operator">/</span>share<span class="token operator">/</span>mysql –datadir<span class="token operator">=</span><span class="token operator">/</span>var<span class="token operator">/</span>lib<span class="token operator">/</span>mysql<span class="token operator">/</span>data<span class="token operator">/</span> 初始化Mysql<span class="token operator">*</span>systemctl start mysqldvim <span class="token operator">/</span>etc<span class="token operator">/</span>my<span class="token punctuation">.</span>cnf 在末行添加 skip<span class="token operator">-</span>grant<span class="token operator">-</span>tables 跳过密码验证systemctl restart mysqldmysql <span class="token operator">-</span>uroot <span class="token operator">-</span>pmysql<span class="token operator">></span>use mysql<span class="token punctuation">;</span> 注意要写分号mysql<span class="token operator">></span>update user set authentication_string<span class="token operator">=</span><span class="token function">password</span><span class="token punctuation">(</span>‘<span class="token number">123456</span>’<span class="token punctuation">)</span> where user<span class="token operator">=</span>‘root’<span class="token punctuation">;</span>exit退出到root vim <span class="token operator">/</span>etc<span class="token operator">/</span>php<span class="token punctuation">.</span>ini  date<span class="token punctuation">.</span>timezone <span class="token operator">=</span> “Asia<span class="token operator">/</span>Shanghai”添加时区systemctl start httpdvi <span class="token operator">/</span>var<span class="token operator">/</span>www<span class="token operator">/</span>html<span class="token operator">/</span>phpinfo<span class="token punctuation">.</span>php添入测试文本<span class="token operator">&lt;</span><span class="token operator">?</span>php <span class="token function">phpinfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">?</span><span class="token operator">></span> 浏览器访问ip<span class="token operator">/</span>phpinfo<span class="token punctuation">.</span><span class="token function">php</span>  <span class="token punctuation">(</span>firewalld<span class="token punctuation">)</span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/Ricechips/image/image/20200821095356.png"></p><blockquote><p>配置cacti<br></p></blockquote><pre class=" language-c"><code class="language-c">vim <span class="token operator">/</span>etc<span class="token operator">/</span>my<span class="token punctuation">.</span>cnf添加<span class="token punctuation">[</span>mysqld<span class="token punctuation">]</span>character<span class="token operator">-</span>set<span class="token operator">-</span>server<span class="token operator">=</span>utf8mb4collation<span class="token operator">-</span>server<span class="token operator">=</span>utf8mb4_unicode_ci重启systemctl restart mysqldmysql <span class="token operator">-</span>uroot <span class="token operator">-</span>pmysql<span class="token operator">></span>create database cacti character set utf8<span class="token punctuation">;</span>mysql<span class="token operator">></span>ALTER DATABASE cacti CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci<span class="token punctuation">;</span>exit退出至root <span class="token operator">/</span>etc<span class="token operator">/</span>my<span class="token punctuation">.</span>cnf 注释掉#skip<span class="token operator">-</span>grant<span class="token operator">-</span>tables 重启mysql进入mysqlmysql<span class="token operator">></span>set global validate_password_policy<span class="token operator">=</span>LOW<span class="token punctuation">;</span>mysql<span class="token operator">></span>set global validate_password_length<span class="token operator">=</span><span class="token number">6</span><span class="token punctuation">;</span>mysql<span class="token operator">></span>alter user ‘root’@‘localhost’ identified by ‘<span class="token number">123456</span>’<span class="token punctuation">;</span>mysql<span class="token operator">></span>grant all privileges on cacti<span class="token punctuation">.</span><span class="token operator">*</span> to cacti@localhost identified by ‘password’ <span class="token punctuation">;</span>mysql<span class="token operator">></span>grant select on mysql<span class="token punctuation">.</span>time_zone_name to cacti@localhost identified by ‘password’<span class="token punctuation">;</span>mysql<span class="token operator">></span>flush privileges<span class="token punctuation">;</span></code></pre><blockquote><p>我的配置过程<br><img src="https://cdn.jsdelivr.net/gh/Ricechips/image/image/20200821095428.png"><br>导入cacti数据库<br>官网下载包<a href="https://www.cacti.net/download_cacti.php">跳转</a><br>解压到目录下</p></blockquote><pre class=" language-c"><code class="language-c">mysql <span class="token operator">-</span>uroot <span class="token operator">-</span>p123456mysql<span class="token operator">></span>use cacti <span class="token punctuation">;</span>mysql<span class="token operator">></span>source <span class="token operator">/</span>root<span class="token operator">/</span>cacti<span class="token number">-1.2</span><span class="token punctuation">.</span><span class="token number">1</span><span class="token operator">/</span>cacti<span class="token punctuation">.</span>sql <span class="token punctuation">;</span>在<span class="token operator">/</span>var<span class="token operator">/</span>www<span class="token operator">/</span>html<span class="token operator">/</span>下创建mkdir cacticp <span class="token operator">-</span>r <span class="token operator">/</span>root<span class="token operator">/</span>cacti<span class="token number">-1.2</span><span class="token punctuation">.</span><span class="token number">1</span><span class="token comment" spellcheck="true">/* /var/www/html/cactivi /var/www/html/cacti/include/config.php修改配置信息$database_type = ‘mysql’;$database_default = ‘cacti’;$database_hostname = ‘localhost’;$database_username = ‘cacti’;$database_password = ‘password’;$database_port = ‘3306’;$database_ssl = false;增加cacti用户权限useradd -s /sbin/nologin cactimkdir /var/www/html/cacti/rra/logchown -R cacti /var/www/html/cacti/rra/log/配置定时任务crontabcrontab –e添入内容*/</span><span class="token number">5</span> <span class="token operator">*</span> <span class="token operator">*</span> <span class="token operator">*</span> <span class="token operator">*</span> <span class="token operator">/</span>usr<span class="token operator">/</span>bin<span class="token operator">/</span>php <span class="token operator">/</span>var<span class="token operator">/</span>www<span class="token operator">/</span>html<span class="token operator">/</span>cacti<span class="token operator">/</span>poller<span class="token punctuation">.</span>php <span class="token operator">></span> <span class="token operator">/</span>dev<span class="token operator">/</span>null <span class="token number">2</span><span class="token operator">></span><span class="token operator">&amp;</span><span class="token number">1</span>crontab <span class="token operator">-</span>l有输出即正常systemctl enable crondsystemctl start crond安装其他相关组件https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>oss<span class="token punctuation">.</span>oetiker<span class="token punctuation">.</span>ch<span class="token operator">/</span>rrdtool<span class="token operator">/</span>pub<span class="token operator">/</span>rrdtool<span class="token number">-1.7</span><span class="token punctuation">.</span><span class="token number">0</span><span class="token punctuation">.</span>tar<span class="token punctuation">.</span>gzhttps<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>cacti<span class="token punctuation">.</span>net<span class="token operator">/</span>downloads<span class="token operator">/</span>spine<span class="token operator">/</span>cacti<span class="token operator">-</span>spine<span class="token number">-1.2</span><span class="token punctuation">.</span><span class="token number">1</span><span class="token punctuation">.</span>tar<span class="token punctuation">.</span>gz编译时需要的软件包yum install glib2<span class="token operator">-</span>devel cairo<span class="token operator">-</span>devel libxml2<span class="token operator">-</span>devel pango pango<span class="token operator">-</span>devel help2man解压后cd rrdtool<span class="token number">-1.7</span><span class="token punctuation">.</span><span class="token number">0</span><span class="token punctuation">.</span><span class="token operator">/</span>configure <span class="token operator">--</span>prefix<span class="token operator">=</span><span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>rrdtoolmakemake installweb初始化cactisetenforce <span class="token number">0</span>关闭防火墙 临时关闭或vi <span class="token operator">/</span>etc<span class="token operator">/</span>selinux<span class="token operator">/</span>config  将SELINUX<span class="token operator">=</span>enforcing改为SELINUX<span class="token operator">=</span>disabled 永久关闭浏览器访问ip<span class="token operator">/</span>cactilog报错修改：chmod <span class="token number">777</span> <span class="token operator">/</span>var<span class="token operator">/</span>www<span class="token operator">/</span>html<span class="token operator">/</span>cacti<span class="token operator">/</span>log默认密码admin<span class="token operator">/</span>admin</code></pre><p><img src="https://cdn.jsdelivr.net/gh/Ricechips/image/image/20200821095526.png"></p><blockquote><p>一些报错修改（不修改不能继续安装）<br><br>1.报错：Your MySQL TimeZone database is not populated. Please populate this database before proceeding.<br><br>修改：mysql_tzinfo_to_sql /usr/share/zoneinfo/Asia/Shanghai Shanghai | mysql -u root -p mysql<br><br>2.报错：A valid timezone that matches MySQL and the system<br><br>修改：vim /etc/php.ini 将date.timezone前面的分号去掉(重启httpd)<br><br>3.报错：某些php模块显示没有安装<br><br>修改：yum install -y php-缺少的模块名,安装之后systemctl restart httpd并刷新cacti网页<br><br>4.Set global max_allowed_packet=17700000;<br><br>5.权限问题（不可写入）chmod a+w /var/www/html/cacti/resource/snmp_queries/或777<br><br>6.cacti无法显示图像：chmod 777 -R /var/www/html/cacti/rra并service snmpd restart<br><br>7.监控本机localhost，snmp返回失败：修改主机名为127.0.0.1而不是localhost</p></blockquote><h2 id="ok"><a href="#ok" class="headerlink" title="ok"></a>ok</h2><p><img src="https://cdn.jsdelivr.net/gh/Ricechips/image/image/20200821095541.png"></p><h2 id="被监控端Win7"><a href="#被监控端Win7" class="headerlink" title="被监控端Win7"></a>被监控端Win7</h2><blockquote><p>控制面板开启SNMP服务<br><br>设置服务团体public,允许任何主机访问<br><br>关闭防火墙<br><br><img src="https://cdn.jsdelivr.net/gh/Ricechips/image/image/20200821095642.png"><br>yum install perl-devel perl-CPAN perl-YAML<br><br>perl -MCPAN -e shell<br><br>cpan&gt; install LWP::UserAgent</p></blockquote><h2 id="被监控端Centos7"><a href="#被监控端Centos7" class="headerlink" title="被监控端Centos7"></a>被监控端Centos7</h2><blockquote><p>yum -y install net-snmp net-snmp-utils<br><br>/etc/snmp/snmpd.conf<br><br>com2sec notConfigUser default public<br><br>access notConfigGroup ‘’’’ any noauth exact <em>all</em> none none<br><br>去掉注释#view all included .1 80<br><br>加一行view all included .1<br><br>service snmpd start<br><br>测试 snmpwalk -v 2c- c public 192.168.106.xx</p></blockquote><h2 id="监控ESXI"><a href="#监控ESXI" class="headerlink" title="监控ESXI"></a>监控ESXI</h2><blockquote><p>vsphere client打开esxi的ssh服务<br><br>putty上去配置snmp(/etc/vmware/snmp.xml）<br></p></blockquote><pre class=" language-c"><code class="language-c"><span class="token operator">&lt;</span>config<span class="token operator">></span><span class="token operator">&lt;</span>snmpSettings<span class="token operator">></span><span class="token operator">&lt;</span>enable<span class="token operator">></span>true<span class="token operator">&lt;</span><span class="token operator">/</span>enable<span class="token operator">></span> #将标签false改为true<span class="token punctuation">.</span><span class="token operator">&lt;</span>port<span class="token operator">></span><span class="token number">161</span><span class="token operator">&lt;</span><span class="token operator">/</span>port<span class="token operator">></span><span class="token operator">&lt;</span>EnvEventSource<span class="token operator">></span>indications<span class="token operator">&lt;</span><span class="token operator">/</span>EnvEventSource<span class="token operator">></span><span class="token operator">&lt;</span>loglevel<span class="token operator">></span>info<span class="token operator">&lt;</span><span class="token operator">/</span>loglevel<span class="token operator">></span><span class="token operator">&lt;</span>communities<span class="token operator">></span>public<span class="token operator">&lt;</span><span class="token operator">/</span>communities<span class="token operator">></span>  #社区名称<span class="token operator">&lt;</span>targets<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>targets<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>snmpSettings<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>config<span class="token operator">></span></code></pre><blockquote><p>cacti添加esxi主机(同一网段)<br><br><img src="https://cdn.jsdelivr.net/gh/Ricechips/image/image/20200821095725.png"></p></blockquote><h2 id="监控Cisco交换机"><a href="#监控Cisco交换机" class="headerlink" title="监控Cisco交换机"></a>监控Cisco交换机</h2><blockquote><p>交换机用com口转usb线连接到win，putty通过com3口登陆进行snmp的配置(网段ip)<br><br>服务器添加交换机<br><br><img src="https://cdn.jsdelivr.net/gh/Ricechips/image/image/20200821095816.png"></p></blockquote><h2 id="配置邮件报警"><a href="#配置邮件报警" class="headerlink" title="配置邮件报警"></a>配置邮件报警</h2><blockquote><p>qq邮箱开启smtp并获得授权码<br><br>在cacti管理界面输入相应信息并发送测试邮件<br><img src="https://cdn.jsdelivr.net/gh/Ricechips/image/image/20200821095856.png"></p></blockquote><h2 id="升级Cacti"><a href="#升级Cacti" class="headerlink" title="升级Cacti"></a>升级Cacti</h2><blockquote><p>因插件版本问题，将原本的Cacti1.2.1升级到最新版1.2.12(2020.5.3)</p></blockquote><pre class=" language-c"><code class="language-c">备份数据库 mysqldump <span class="token operator">-</span>uroot <span class="token operator">-</span>p123456 <span class="token operator">-</span>l <span class="token operator">--</span>add<span class="token operator">-</span>drop<span class="token operator">-</span>table cacti <span class="token operator">></span> cacti_old<span class="token punctuation">.</span>sql备份cacti根目录 mv <span class="token operator">/</span>var<span class="token operator">/</span>www<span class="token operator">/</span>html<span class="token operator">/</span>cacti <span class="token operator">/</span>var<span class="token operator">/</span>www<span class="token operator">/</span>html<span class="token operator">/</span>cacti_old官网下载最新版包mv cacti<span class="token number">-1.2</span><span class="token punctuation">.</span><span class="token number">12</span><span class="token operator">/</span> <span class="token operator">/</span>var<span class="token operator">/</span>www<span class="token operator">/</span>html<span class="token operator">/</span>cactivim <span class="token operator">/</span>data<span class="token operator">/</span>www<span class="token operator">/</span>cacti<span class="token operator">/</span>include<span class="token operator">/</span>config<span class="token punctuation">.</span>php 数据库配置同前cp <span class="token operator">/</span>var<span class="token operator">/</span>www<span class="token operator">/</span>html<span class="token operator">/</span>cacti_old<span class="token operator">/</span>rra<span class="token operator">/</span><span class="token operator">*</span> <span class="token operator">/</span>var<span class="token operator">/</span>www<span class="token operator">/</span>html<span class="token operator">/</span>cacti<span class="token operator">/</span>rra<span class="token operator">/</span>cp <span class="token operator">-</span>u <span class="token operator">/</span>var<span class="token operator">/</span>www<span class="token operator">/</span>html<span class="token operator">/</span>cacti_old<span class="token operator">/</span>scripts<span class="token operator">/</span><span class="token operator">*</span> <span class="token operator">/</span>var<span class="token operator">/</span>www<span class="token operator">/</span>html<span class="token operator">/</span>cacti<span class="token operator">/</span>scripts<span class="token operator">/</span>cp <span class="token operator">-</span>u <span class="token operator">-</span>R <span class="token operator">/</span>var<span class="token operator">/</span>www<span class="token operator">/</span>html<span class="token operator">/</span>cacti_old<span class="token operator">/</span>resource<span class="token operator">/</span><span class="token operator">*</span> <span class="token operator">/</span>var<span class="token operator">/</span>www<span class="token operator">/</span>html<span class="token operator">/</span>cacti<span class="token operator">/</span>resource<span class="token operator">/</span></code></pre><blockquote><p>刷新管理平台界面并安装<br><img src="https://cdn.jsdelivr.net/gh/Ricechips/image/image/20200821095945.png"></p></blockquote><h2 id="配置Thold警报机制"><a href="#配置Thold警报机制" class="headerlink" title="配置Thold警报机制"></a>配置Thold警报机制</h2><blockquote><p>从cacti的github界面下载插件thold包<a href="https://github.com/Cacti/plugin_thold/archive/develop.zip">跳转</a> <br><br>将包解压后放在/var/www/html/cacti/plugins路径下并改名为thold<br><br>刷新控制台，安装插件<br><br><img src="https://cdn.jsdelivr.net/gh/Ricechips/image/image/20200821100007.png"><br>根据图形模版来设置阈值<br><img src="https://cdn.jsdelivr.net/gh/Ricechips/image/image/20200821100032.png"></p></blockquote><h2 id="配置开源邮件服务器EwoMail接收报警"><a href="#配置开源邮件服务器EwoMail接收报警" class="headerlink" title="配置开源邮件服务器EwoMail接收报警"></a>配置开源邮件服务器EwoMail接收报警</h2><blockquote><p>EwoMail官方文档<a href="http://doc.ewomail.com/docs/ewomail/install">跳转</a> <br><br>邮件smtp配置及效果图<br><br><img src="https://cdn.jsdelivr.net/gh/Ricechips/image/image/20200821100048.png"><br><img src="https://cdn.jsdelivr.net/gh/Ricechips/image/image/20200821100105.png"></p></blockquote><h2 id="线上的离线环境centos系统安装snmp服务"><a href="#线上的离线环境centos系统安装snmp服务" class="headerlink" title="线上的离线环境centos系统安装snmp服务"></a>线上的离线环境centos系统安装snmp服务</h2><blockquote><p>下载rpm包，根据依赖一个一个安装<br><br>包的下载地址:<a href="https://rpmfind.net/">https://rpmfind.net/</a> <br><br>示例:<br><img src="https://cdn.jsdelivr.net/gh/Ricechips/image/image/20200821100121.png"></p></blockquote><h2 id="轮询器优化cmd-gt-spine"><a href="#轮询器优化cmd-gt-spine" class="headerlink" title="轮询器优化cmd->spine"></a>轮询器优化cmd-&gt;spine</h2><p>官网下载最新包 源码编译时报错:c compiler cannot create executables<br><br>一开始以为是gcc没装好，remove后重装还是报错，找了十来篇文章无果，突然看到一篇</p><pre class=" language-c"><code class="language-c">查找原因，查看config<span class="token punctuation">.</span>log 日志真正的错误并不在这里，而是在最后一个错误出现的地方我遇到的错误是：   “collect2<span class="token punctuation">:</span> ld returned <span class="token number">1</span> exit status”因为缺少了动态库文件。我这里缺少的是lssl，就是openssl的库文件。使用命令yum install <span class="token operator">-</span>y openssl<span class="token operator">-</span>devel（前面没装的原因）</code></pre><p>本来开心的一，又报错</p><pre class=" language-c"><code class="language-c">configure<span class="token punctuation">:</span>error<span class="token punctuation">:</span> Cannot find SNMP headers<span class="token punctuation">.</span>  Use<span class="token operator">--</span>with<span class="token operator">-</span>snmp<span class="token operator">=</span> to specify non<span class="token operator">-</span><span class="token keyword">default</span> path<span class="token punctuation">.</span>网上说要<span class="token punctuation">.</span><span class="token operator">/</span>configure <span class="token operator">--</span>prefix<span class="token operator">=</span><span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>spine <span class="token operator">--</span>with<span class="token operator">-</span>snmp<span class="token operator">=</span><span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>net<span class="token operator">-</span>snmp我find了一下，发现两个路径都不对，文章还都是copy来copy去的，一模一样，继续找下去终于正解解决办法：# yum install <span class="token operator">-</span>y net<span class="token operator">-</span>snmp<span class="token operator">-</span>devel</code></pre><p>配置</p><pre class=" language-c"><code class="language-c">cp <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>spine<span class="token operator">/</span>etc<span class="token operator">/</span>spine<span class="token punctuation">.</span>conf<span class="token punctuation">.</span>dist  <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>spine<span class="token operator">/</span>etc<span class="token operator">/</span>spine<span class="token punctuation">.</span>confvi <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>spine<span class="token operator">/</span>etc<span class="token operator">/</span>spine<span class="token punctuation">.</span>conf填写数据库信息，即Cacti数据库DB_Host         localhostDB_Database     cactiDB_User         cactiDB_Pass         passwordDB_Port         <span class="token number">3306</span>测试是否正常 <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>spine<span class="token operator">/</span>bin<span class="token operator">/</span>spine</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Samba-AD</title>
      <link href="/posts/samba-ad/"/>
      <url>/posts/samba-ad/</url>
      
        <content type="html"><![CDATA[<h1 id="Samba-AD"><a href="#Samba-AD" class="headerlink" title="Samba-AD"></a>Samba-AD</h1><p>域控</p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>官方文档:<a href="https://wiki.samba.org/index.php/Package_Dependencies_Required_to_Build_Samba#Red_Hat_Enterprise_Linux_7_.2F_CentOS_7_.2F_Scientific_Linux_7">依赖</a><br><a href="https://wiki.samba.org/index.php/Setting_up_Samba_as_an_Active_Directory_Domain_Controller">搭建步骤</a></p><blockquote><p>configure使报错:未找到GnuTLS(查询文档，明确要求要从外部获取)<br><br><em>wget <a href="http://www.ring.gr.jp/pub/net/gnupg/gnutls/v3.6/gnutls-3.6.4.tar.xz">http://www.ring.gr.jp/pub/net/gnupg/gnutls/v3.6/gnutls-3.6.4.tar.xz</a></em> 编译报错:没有Nettle<br><br><em>wget <a href="ftp://ftp.gnu.org/gnu/nettle/nettle-3.4.1.tar.gz">ftp://ftp.gnu.org/gnu/nettle/nettle-3.4.1.tar.gz</a></em> make报错:<em>make[1]: **</em> [aes-decrypt-internal.o] 错误 127*<br><br>起先以为是gcc没装好,反复重装和清除编译都无效,发现躲着一行*/bin/sh: m4: not found*,原来是m4这个包没装<br><br><a href="https://blog.csdn.net/HideInTime/article/details/94600815">教程</a></p></blockquote><h2 id="一段漫长又辛酸的搭建失败之反复重复失败直至成功史"><a href="#一段漫长又辛酸的搭建失败之反复重复失败直至成功史" class="headerlink" title="一段漫长又辛酸的搭建失败之反复重复失败直至成功史"></a>一段漫长又辛酸的搭建失败之反复重复失败直至成功史</h2><blockquote><p>一开始接到任务时是先找了这篇 <a href="http://lihaitao.cn/?p=299">教程</a> 进行搭建,然后就一直卡在Kerberos的kdc出不来,而且在/etc/resolv.conf配置这一环节也有莫名其妙的问题,疯狂查资料,国内查到国外,发现大家的做法都大同小异,在kdc那步都一笔带过,那我就很郁闷了。 <br><br><br>后来跟着官方文档走,想说应该没问题了,结果在交互式时报错(libgnutls.so.30)找不到,我寻思我却是也没装这个,而是用的gnutls-devel阿,在rpmfind找这个包,发现没有centos7版本的,8和6都有,gg。 <br><br><br>反复思考到底哪里出了问题,会不会是我本身系统部署了太多环境(cacti,opennebula…)然后什么东西冲突了?会不会是sssd服务被我搞坏了?算了,我重装一个干干净净的centos试试好了(虚拟机克隆半分钟出一台),对了,Samba的版本!一开始是用的4.1.12,后来用最新的4.12和4.10,这次搞下4.4.10好了。<br><br><br>成了,一路顺畅没有任何报错,起飞。<br><img src="https://raw.githubusercontent.com/Ricechips/Samba-AD/master/PrtScn/11.PNG" alt="samba"></p></blockquote><h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><pre class=" language-c"><code class="language-c"><span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>samba<span class="token operator">/</span>etc<span class="token operator">/</span>smb<span class="token punctuation">.</span>conf 文件共享目录及配置<span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>samba<span class="token operator">/</span>sbin<span class="token operator">/</span>samba  启动<span class="token function">samba</span>   <span class="token punctuation">(</span>killall samba<span class="token punctuation">)</span></code></pre><h2 id="最后的最后"><a href="#最后的最后" class="headerlink" title="最后的最后"></a>最后的最后</h2><blockquote><p>成功部署了samba+ad+dc后，用的管理工具是windows自带的RSAT（具体来说是Active Directory Users and Computers）<br><br><br>新建了一台准备入狱（域）的win10,dns调好后发现用用户的帐号密码怎么登都报错（计算机名错误），很奇怪，后使用administrator入域成功，切换用户。（原来本来加域流程就是要这么走的）<br><br><br>在samba端创建一share文件夹并设好权限,管理员访问文件ok，用户怎么都访问不了（明明文件夹在管理员界面权限已经开放），后发现是samba那边share虽然设好了，但其上级/home/aoc/share权限问题。<br><br><br><img src="https://raw.githubusercontent.com/Ricechips/Samba-AD/master/PrtScn/Screenshot%20from%202020-06-24%2017-42-34.png" alt="samba"></p></blockquote><h2 id="其实还没有结束"><a href="#其实还没有结束" class="headerlink" title="其实还没有结束"></a>其实还没有结束</h2><blockquote><p>因为部署成功的版本是：centos7.8 + samba4.4  （3年前的了） 所以要升级<br><br>现在的版本：centos8.2 + samba4.12 (2020)<br><br>部署过程：</p></blockquote><pre class=" language-c"><code class="language-c"><span class="token operator">/</span>etc<span class="token operator">/</span>sysconfig<span class="token operator">/</span>network<span class="token operator">-</span>scripts 找到网卡进行配置nmcli c reload 重启服务上网dnf install https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>dl<span class="token punctuation">.</span>fedoraproject<span class="token punctuation">.</span>org<span class="token operator">/</span>pub<span class="token operator">/</span>epel<span class="token operator">/</span>epel<span class="token operator">-</span>release<span class="token operator">-</span>latest<span class="token number">-8</span><span class="token punctuation">.</span>noarch<span class="token punctuation">.</span>rpm <span class="token operator">-</span>y 加epel仓库dnf repolist epel <span class="token operator">-</span>v 查看版本echo centos8<span class="token operator">-</span>samba <span class="token operator">></span> <span class="token operator">/</span>etc<span class="token operator">/</span>hostname  重启生效<span class="token macro property"># yum -y install dnf-plugins-core</span><span class="token macro property"># yum config-manager --set-enabled PowerTools 开启PowerTools存储库</span><span class="token macro property"># yum install docbook-style-xsl gcc gdb gnutls-devel gpgme-devel jansson-devel \      keyutils-libs-devel krb5-workstation libacl-devel libaio-devel \      libarchive-devel libattr-devel libblkid-devel libtasn1 libtasn1-tools \      libxml2-devel libxslt lmdb-devel openldap-devel pam-devel perl \      perl-ExtUtils-MakeMaker perl-Parse-Yapp popt-devel python3-cryptography \      python3-dns python3-gpg python36-devel readline-devel rpcgen systemd-devel \      tar zlib-devel   安装依赖</span>wget https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>download<span class="token punctuation">.</span>samba<span class="token punctuation">.</span>org<span class="token operator">/</span>pub<span class="token operator">/</span>samba<span class="token operator">/</span>stable<span class="token operator">/</span>samba<span class="token number">-4.12</span><span class="token punctuation">.</span><span class="token number">3</span><span class="token punctuation">.</span>tar<span class="token punctuation">.</span>gztar <span class="token operator">-</span>zxvf samba<span class="token number">-4.1</span><span class="token punctuation">.</span><span class="token number">12</span><span class="token punctuation">.</span>tar<span class="token punctuation">.</span>gzcd samba<span class="token number">-4.1</span><span class="token punctuation">.</span><span class="token number">12</span><span class="token punctuation">.</span><span class="token operator">/</span>configure <span class="token operator">&amp;&amp;</span> make <span class="token operator">&amp;&amp;</span> make install 编译安装<span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>samba<span class="token operator">/</span>bin<span class="token operator">/</span>samba<span class="token operator">-</span>tool domain provision <span class="token operator">--</span>use<span class="token operator">-</span>rfc2307 <span class="token operator">--</span>interactive 交互式配置cat <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>samba<span class="token operator">/</span>etc<span class="token operator">/</span>smb<span class="token punctuation">.</span>conf 配置信息<span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>samba<span class="token operator">/</span>sbin<span class="token operator">/</span>samba  开启<span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>samba<span class="token operator">/</span>bin<span class="token operator">/</span>smbclient <span class="token operator">-</span>L localhost <span class="token operator">-</span>U<span class="token operator">%</span> echo “nameserver <span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0.1</span>” <span class="token operator">></span> <span class="token operator">/</span>etc<span class="token operator">/</span>resolv<span class="token punctuation">.</span>conf<span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>samba<span class="token operator">/</span>bin<span class="token operator">/</span>samba<span class="token operator">-</span>tool dns zonelist <span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0.1</span> <span class="token operator">-</span>U administratorcp <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>samba<span class="token operator">/</span>private<span class="token operator">/</span>krb5<span class="token punctuation">.</span>conf <span class="token operator">/</span>etc<span class="token operator">/</span>krb5<span class="token punctuation">.</span>confkinit administrator@TESTAD<span class="token punctuation">.</span>LOCAL</code></pre><blockquote><p>windows ipv4的dns设成域服务器并加域（防火墙）<br><br>linux共享目录映射到windows下磁盘<br><img src="https://cdn.jsdelivr.net/gh/Ricechips/image/image/samba.jpg"><br><a href="https://blog.csdn.net/lileiyuyanqin/article/details/79359515">配置文件详解</a> <br><br>ps:用于共享的目录所有者设为：3000000:users 实现windows端文件夹属性-&gt;安全权限管理 <br>linux目录权限和win文件夹权限同步 everyone=777 <br>登域的时候注意\和/ </p></blockquote><h2 id="信任关系"><a href="#信任关系" class="headerlink" title="信任关系"></a>信任关系</h2><p>默认情况下，每隔30天机器密码会自动更新一次。在需要更新密码时，客户端会尝试去联系域控，如果一直没能联系到域控，就会造成密码更新失败。这时由于在AD中的那份机器密码已过期，客户端又不能成功更新密码，就会发生掉域问题。<br><br>为预防这种情况，我们可以在Default Domain Policy中设置停止机器账号密码改变。这条组策略的具体路径为：Computer Configuration\Policies\Security Settings\Local Policies\Security Options\Domain Member: Disable machine account password changes</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Centos7-kvm</title>
      <link href="/posts/centos7-kvm/"/>
      <url>/posts/centos7-kvm/</url>
      
        <content type="html"><![CDATA[<h1 id="工作要求，搞了一个礼拜，结合了各大blog文章、各大网站教程，终于把透传完成了，现在总结一下流程8"><a href="#工作要求，搞了一个礼拜，结合了各大blog文章、各大网站教程，终于把透传完成了，现在总结一下流程8" class="headerlink" title="工作要求，搞了一个礼拜，结合了各大blog文章、各大网站教程，终于把透传完成了，现在总结一下流程8."></a>工作要求，搞了一个礼拜，结合了各大blog文章、各大网站教程，终于把透传完成了，现在总结一下流程8.</h1><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><blockquote><p><code>host机:centos7.7</code> kvm虚拟化 <code>虚机：win10</code>  </p></blockquote><h2 id="u盘安装centos"><a href="#u盘安装centos" class="headerlink" title="u盘安装centos"></a>u盘安装centos</h2><blockquote><p>bios设置u盘启动<br>进入安装界面按TAB修改路径<br>将vmlinuz initrd … quiet 改为 vmlinuz initrd=initrd.img linux dd quiet 找到u盘设备名 (我的是sda1)<br>ctrl+alt+del重启 再次配置 vmlinuz … stage2=hd:/dev/sda1 quiet<br>后面正常安装  </p></blockquote><h2 id="kvm安装"><a href="#kvm安装" class="headerlink" title="kvm安装"></a>kvm安装</h2><blockquote><p><em>yum install -y qemu-kvm libvirt virt-install bridge-utils</em> （依次是 用户态 命令行 工具 桥接设备)<br>查询kvm模块 <em>lsmod | grep kvm</em><br>启动libvirtd<br> <em>systemctl enable libvirtd <br>  systemctl start libvirtd <br>   systemctl status libvirtd</em><br>安装virt-manager <br><em>yum -y install virt-manager</em> (这个是虚拟机图形化管理界面)  </p></blockquote><h2 id="显卡透传"><a href="#显卡透传" class="headerlink" title="显卡透传"></a>显卡透传</h2><blockquote><ul><li>配置iommu <em>vim /etc/default/grub</em> 将<em>intel_iommu=on</em>放在<em>GRUB_CMDLINE_LINUX=“ ”</em>里面<br>更新grub <em>grub2-mkconfig -o /boot/grub2/grub.cfg</em>  之后<code>reboot</code><br>用<em>dmesg | grep -e DMAR -e IOMMU</em>看是否有IOMMU enabled输出  </li><li>lspci 找到要透传的显卡，记下ID 如：83:00.0 AMD 83:00.1 Audio  </li></ul><p><em>lspci -vv -s 83:00.0 | grep driver</em>可查其驱动<br>查询到之后将驱动禁用 <em>vim /etc/modprobe.d/blacklist.conf</em> <code>blacklist radeon</code> <code>blacklist snd_hda_intel</code> </p><ul><li>不知道原因但是必须做的一步<br>vim /usr/lib/modprobe.d/dist-blacklist.conf 去掉禁用blacklist radeonfb 加上一行options nouveau modeset=0<br>备份原来的 initramfs nouveau image镜像 mv /boot/initramfs-$(uname -r).img /boot/initramfs-$(uname -r)-nouveau.img<br>创建新的 initramfs image镜像 dracut /boot/initramfs-$(uname -r).img $(uname -r)   </li><li>加载vfio驱动<br> <em>modprobe vfio</em><br> <em>modprobe vfio-pci</em>  </li><li>从<code>host机</code>卸载A卡 <br><em>virsh nodedev-detach pci_0000_83_00_0</em> <br><em>virsh nodedev-detach pci_0000_83_00_1</em><br>此时再查询驱动，得到<em>kernel driver in use: vfio-pci</em></li></ul></blockquote><h2 id="安装OVMF"><a href="#安装OVMF" class="headerlink" title="安装OVMF"></a>安装OVMF</h2><blockquote><ul><li><em>wget <a href="http://www.kraxel.org/repos/firmware.repo">http://www.kraxel.org/repos/firmware.repo</a> -O /etc/yum.repos.d/firmware.repo</em>配置yum源  </li></ul><p><em>yum install edk2.git-ovmf-x64</em>  </p><ul><li>配置libvirtd<br> <em>vim /etc/libvirt/qemu.conf</em> <br><code>nvram = [ "/usr/share/edk2.git/ovmf-x64/OVMF_CODE-pure-efi.fd:/usr/share/edk2.git/ovmf-x64/OVMF_VARS-pure-efi.fd", ]</code>  </li><li>重启libvirtd <br><em>systemctl restart libvirtd</em></li></ul></blockquote><h2 id="安装win10"><a href="#安装win10" class="headerlink" title="安装win10"></a>安装win10</h2><blockquote><p>virt-manager 打开图形管理界面<br>在配置中以UEFI启动<br>CDROM添入win10.iso<br>这里的引导项有：<code>1.CDROM(win10.iso) 2.CDROM(virtio.iso) 3.VirtIO磁盘(100G)</code><br>加载硬盘时选择<code>加载驱动程序</code>，浏览本地文件即<code>virtio-win-0.1.1</code>目录下的<code>viostor\w10\amd64</code><br>添加PCI设备(83:00:0和83:00:1)<br>之后正常装系统<br>ps:virtio是对此win虚机进行优化，性能实测有质的提升 可在<a href="https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/archive-virtio/">此处</a> 下载 对了,网卡也可以改成virtio,具体路径在<code>NetKVM\w10\amd64</code></p></blockquote><h2 id="usb透传"><a href="#usb透传" class="headerlink" title="usb透传"></a>usb透传</h2><blockquote><p>lsusb查询项透传的usb设备<br>在manager上面直接添加(修改配置文件蛮麻烦的，图形化轻松搞定)</p></blockquote><h3 id="一些心得"><a href="#一些心得" class="headerlink" title="一些心得"></a>一些心得</h3><p>这东西做出来也算是磕破了头吧，查了不知道多少的资料，每一篇都有相似的操作，但又不尽相同，如果按某一篇en头做，基本是失败的，我的做法是结合每篇的精华操作，把流程搞清了，每一步做的意义是什么，明白了之后再具体实现其步骤，有针对性找操作流程，当然，同时不能忘记对硬件的考虑，如<code>硬盘接口脱落，内存条插了总内存反而变少了，主板太热了，无线鼠标会被金属板隔离传输导致卡顿.....</code>行吧，下个任务见。</p><h3 id=""><a href="#" class="headerlink" title=""></a></h3><p>ps:Q:failed to set iommu for container: Operation not permitted<br><br>A:echo “1” &gt; /sys/module/vfio_iommu_type1/parameters/allow_unsafe_interrupts<br><br>virt-host-validate 测试环境<br><br><a href="https://blog.acesheep.com/index.php/archives/720/">https://blog.acesheep.com/index.php/archives/720/</a> 教程</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/undefined/"/>
      <url>/posts/undefined/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
